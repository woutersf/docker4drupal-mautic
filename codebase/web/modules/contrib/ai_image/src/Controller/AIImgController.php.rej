@@ -2,14 +2,16 @@
 
 namespace Drupal\ai_image\Controller;
 
+use Drupal\ai\AiProviderPluginManager;
 use Drupal\Core\Controller\ControllerBase;
 use Drupal\key\KeyRepositoryInterface;
 use Drupal\ai_image\GetAIImage;
+use PhpParser\Error;
 use Symfony\Component\HttpFoundation\JsonResponse;
 use Symfony\Component\HttpFoundation\RedirectResponse;
 use Symfony\Component\HttpFoundation\Request;
 use Symfony\Component\DependencyInjection\ContainerInterface;
-use Drupal\ai\Enum\Bundles;
+
 /**
  * Returns responses for AIImg routes.
  */
@@ -69,20 +80,41 @@
    * Builds the response.
    */
   public function getimage(Request $request): JsonResponse {
+    $imgurl = NULL;
     $data = json_decode($request->getContent());
     $prompt = implode(', ', [$data->prompt, $data->options->prompt_extra]);
-    $provider_name = $data->options->source;
-    $generator = $this->aiImageGenerator;
-    $imgurl = $generator->generateImageInAiModule($provider_name, $prompt);
-    if (!$imgurl) {
-      $imgurl = '/modules/custom/ai_image/icons/error.jpg';
+    $provider_model = $data->options->source;
+    $ai_model = '';
+    $ai_provider = '';
+    try {
+      if ($provider_model == '' || $provider_model == '000-AI-IMAGE-DEFAULT') {
+        if (empty($parts[0])) {
+          $default_model = $this->aiProviderManager->getSimpleDefaultProviderOptions('text_to_image');
+          if ($default_model == "") {
+            throw new Error('no text-to_image_model selected and no default , can not render.');
+          }
+          else {
+            $parts1 = explode('__', $default_model);
+            $ai_provider = $parts1[0];
+            $ai_model = $parts1[1];
+          }
+        }
+      }
+      else {
+        $parts = explode('__', $provider_model);
+        $ai_provider = $parts[0];
+        $ai_model = $parts[1];
+      }
+      $imgurl = $this->aiImageGenerator->getImage($ai_provider, $ai_model, $prompt);
+    } catch (Exception $exception) {
+      $path = \Drupal::service('extension.list.module')->getPath('ai_image');
+      $imgurl = '/' . $path . '//icons/error.jpg';
     }
     return new JsonResponse(
       [
         'text' => trim($imgurl),
-      ],
+      ]
     );
   }
 
-
 }
